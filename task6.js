// Задание 1

// Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым символом.

// Вам понадобятся методы строк.

function ucFirst(str) {
   let uc = str.slice(0, 1).toUpperCase();
   let lc = str.slice(1);
   console.log(uc + lc);
}

// Задание 2

// Напишите функцию checkSpam(str), возвращающую true, если str содержит 'badWord' или 'XXX', а иначе false.
// Функция должна быть нечувствительна к регистру.

function checkSpam(str) {
    let newStr = str.toLowerCase()
    if (newStr.includes('badWord'.toLowerCase()) || newStr.includes('XXX'.toLowerCase())) {
       return true
    }
    else {
        return false
    } 
}

// Задание 3

// Написать функцию, которой на вход подается строка, на выход она дает символы наоборот (разворачивает строку). Пример: «привет Женя» -> «янеЖ тевирп»

// Обратите внимание: метод reverse существует только у массивов.

function reverse(str) {
    let arr = str.split('');
    let rev = arr.reverse();
    return rev.join('');
  }



  
// Задание 4



// Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. 



let stations = [

'MAN675847583748sjt567654;Manchester Piccadilly',

'GNF576746573fhdg4737dh4;Greenfield',

'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',

'SYB4f65hf75f736463;Stalybridge',

'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'

];



// Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:

// MAN: Manchester Piccadilly

// Вывести эти строки в консоль

// ПОДСКАЗКА:

// 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
// 2. Найдите номер символьного номера точки с запятой.
// 3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
// 4. Объедините две новые переменные и строк

  
  for (let i = 0; i < stations.length; i++) {
    let three = stations[i].slice(0, 3);
    let index = stations[i].indexOf(';');
    let forHuman = stations[i].slice(index + 1);
    console.log(`${three}: ${forHuman}`);
  }





// Задание 5

// Напишите функцию, которая проверяет, можержит ли массив элементы, равные нулю. Если да - возвращает true.

// Проверить работу функции на примере массивов [12, 4, 50, 1, 0, 18, 40], [56, 24, -55, 2, 9, -345]




function nul(arr) {
    if (arr.includes(0)) {
        return true
    }
    else {
        return false
    }
  }
  
  let numb = [12, 4, 50, 1, 0, 18, 40];
  let num = [56, 24, -55, 2, 9, -345];
  
  
  console.log(nul(num));
  console.log(nul(numb));




  // Задание 6

// Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.

// Пример:

let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];

// console.log(unique(strings) ); должен вывести "кришна, харе, :-O"



// ПОДСКАЗКА

// - создать новый массив

// - обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные.

function unique(arr) {
    let newArr = [];
  for (let i = 0; i < strings.length; i++) {
    if (!newArr.includes(strings[i])) {
    newArr.push(strings[i])
    }
  }
  return newArr
}

console.log(unique(strings));


// Задание 7

 

// Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.

// Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.

// Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:

// 1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.

// 2. Создайте общий массив с данными Жени (исправленными) и Юли.

// 3. Для каждой кошки этого общего массива выведите в консоль текст:

// - если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет

// - если котёнок - Кошка № 2 ещё котёнок

// 4. Вызовите функцию для двух наборов тестовых данных.

// Тестовые данные:

// 1.  Данные Жени  [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]

// Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]

// 2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]

// Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]

// В задании необходимо использовать методы массивов: forEach, splice, concat


function verifyCats(catsJane, catsJulia) {
  let newCatsJane = catsJane.slice(1, catsJane.length - 1)
  let general = newCatsJane.concat(catsJulia)
  general.forEach((element, index) => {
    if (element < 2) {
      console.log(`Кошка № ${index + 1} ещё котёнок`);
    }
    else {
      console.log(`Кошка № ${index + 1} взрослая, ей ${element} лет`);
    }
  })};


// catsJane = [4, 5, 3, 11, 6, 2, 4, 1, 5, 9];

// catsJulia = [2, 4, 5, 1, 13, 2, 15, 8, 3, 7];

// catsJane = [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]

// catsJulia = [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]

verifyCats(catsJane, catsJulia)

    

// Задание 8



// Решить 4 задание из прошлой темы, используя метод filter


// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

let arr = [5, 4, 3, 8, 0];



filterFor = (arr, a) => {
const five = arr.filter(i => i >= a)
return five
}

// Задание 9



// Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what'].

threeSym = (arr) => {
  const three = arr.filter(item => item.length > 3) 
  return three
}


ar = ['yes', 'hello', 'no', 'easycode', 'what'];

console.log(threeSym(ar));


// Задание 10



// Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы (размер массива определяется его длиной): 

// arrArr = [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ];



// ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, сами являются массивами и обладают всеми свойствами массивов.

arrArr = [ [14, 45], [1], ['a', 'c', 'd'] ];

const sortedArr = arrArr.sort(function(a, b) {
   if (a.length > b.length) {
       return 1;
   }
   if (a.length < b.length){
       return -1;
   }
});








